// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Data.Context;

#nullable disable

namespace Restaurant.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250521165921_AddCantitateTotala")]
    partial class AddCantitateTotala
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurant.Domain.Entities.Alergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alergeni");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorii");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodUnic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostTransport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataComenzii")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAplicat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OraEstimativaLivrare")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UtilizatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizatorId");

                    b.ToTable("Comenzi");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.ComandaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("CantitatePortie")
                        .HasColumnType("int");

                    b.Property<int>("ComandaId")
                        .HasColumnType("int");

                    b.Property<int?>("MeniuId")
                        .HasColumnType("int");

                    b.Property<int?>("PreparatId")
                        .HasColumnType("int");

                    b.Property<decimal>("PretUnitate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ComandaId");

                    b.HasIndex("MeniuId");

                    b.HasIndex("PreparatId");

                    b.ToTable("ComandaItems");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.ImaginePreparat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PathImagine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreparatId");

                    b.ToTable("ImaginiPreparat");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Meniu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Meniuri");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Preparat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantitatePortie")
                        .HasColumnType("int");

                    b.Property<float>("CantitateTotala")
                        .HasColumnType("real");

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Preparate");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.PreparatAlergen", b =>
                {
                    b.Property<int>("PreparatId")
                        .HasColumnType("int");

                    b.Property<int>("AlergenId")
                        .HasColumnType("int");

                    b.HasKey("PreparatId", "AlergenId");

                    b.HasIndex("AlergenId");

                    b.ToTable("PreparatAlergeni");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.PreparatMeniu", b =>
                {
                    b.Property<int>("MeniuId")
                        .HasColumnType("int");

                    b.Property<int>("PreparatId")
                        .HasColumnType("int");

                    b.Property<float>("CantitatePortieMeniu")
                        .HasColumnType("real");

                    b.HasKey("MeniuId", "PreparatId");

                    b.HasIndex("PreparatId");

                    b.ToTable("PreparatMeniuri");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Utilizator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresaLivrare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Utilizatori");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Comanda", b =>
                {
                    b.HasOne("Restaurant.Domain.Entities.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.ComandaItem", b =>
                {
                    b.HasOne("Restaurant.Domain.Entities.Comanda", "Comanda")
                        .WithMany("ComandaItems")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Domain.Entities.Meniu", "Meniu")
                        .WithMany()
                        .HasForeignKey("MeniuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Restaurant.Domain.Entities.Preparat", "Preparat")
                        .WithMany()
                        .HasForeignKey("PreparatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Comanda");

                    b.Navigation("Meniu");

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.ImaginePreparat", b =>
                {
                    b.HasOne("Restaurant.Domain.Entities.Preparat", "Preparat")
                        .WithMany("Imagini")
                        .HasForeignKey("PreparatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Meniu", b =>
                {
                    b.HasOne("Restaurant.Domain.Entities.Categorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Preparat", b =>
                {
                    b.HasOne("Restaurant.Domain.Entities.Categorie", "Categorie")
                        .WithMany("Preparate")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.PreparatAlergen", b =>
                {
                    b.HasOne("Restaurant.Domain.Entities.Alergen", "Alergen")
                        .WithMany("PreparatAlergeni")
                        .HasForeignKey("AlergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Domain.Entities.Preparat", "Preparat")
                        .WithMany("Alergeni")
                        .HasForeignKey("PreparatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alergen");

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.PreparatMeniu", b =>
                {
                    b.HasOne("Restaurant.Domain.Entities.Meniu", "Meniu")
                        .WithMany("PreparatMeniuri")
                        .HasForeignKey("MeniuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Domain.Entities.Preparat", "Preparat")
                        .WithMany("Meniuri")
                        .HasForeignKey("PreparatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Meniu");

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Alergen", b =>
                {
                    b.Navigation("PreparatAlergeni");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Categorie", b =>
                {
                    b.Navigation("Preparate");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Comanda", b =>
                {
                    b.Navigation("ComandaItems");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Meniu", b =>
                {
                    b.Navigation("PreparatMeniuri");
                });

            modelBuilder.Entity("Restaurant.Domain.Entities.Preparat", b =>
                {
                    b.Navigation("Alergeni");

                    b.Navigation("Imagini");

                    b.Navigation("Meniuri");
                });
#pragma warning restore 612, 618
        }
    }
}
